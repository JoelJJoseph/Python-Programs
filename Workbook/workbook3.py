# -*- coding: utf-8 -*-
"""ClassWk_5_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nNxT2Jb_aVga3JRyy2iOUdncYQ2uvIOE

**Basics of Numpy Arrays**
"""

import numpy as np
np.random.seed(0)
x1=np.random.randint(10,size=6)
x2=np.random.randint(10,size=(3,4))
x3=np.random.randint(10,size=(3,4,5))
print(x3)
print("x3 ndim:", x3.ndim)
print("x3 shape:", x3.shape)
print("x3 size:", x3.size)
print("itemsize:", x3.itemsize,"bytes")
print("nbytes:", x3.nbytes, "bytes")

x3

"""**Array Indexing: Accessing Single Elements**"""

x1

x1[0]

x1[4]

x1[-1]

x1[-2]

x2

x2[0,0]

x2[2,0]

x2[2, -1]

x2[0,0]=24
x2

x1[0]=3.1415
x1

"""**Array Slicing: Accessing Subarrays**"""

x=np.arange(10)
x

x[:5]

x[5:]

x[4:7]

x[::2] #every other element starting at 0

x[1::2] #every other element starting at 1

x[::-1] #all elements in reversed order

x[5::-2] #reversed every element from index 5

"""**Multidimensional Subarrays**"""

x2

x2[:2, :3]  #2 rows, 3 columns

x2[:3, ::2]#all rows every other column

x2

x2[::-1, ::-1] #subarray dimensions reversed together

"""**Accessing array rows and columns**
-- combining indexing and slicing
"""

print(x2[:,0]) #printing first column

print(x2[0,:]) #printing first row
print(x2[0]) #equivalent to x2[0,:]

"""**Subarrays as no-copy views**"""

print(x2)

#extracting 2 X 2 subarray
x2_sub=x2[:2, :2]
print(x2_sub)

x2_sub[0,0]=999
print(x2_sub)

print(x2)

"""**Creating Copies of Arrays**"""

x2_sub_copy=x2[:2, :2].copy()
print(x2_sub_copy)

x2_sub_copy[0,0]=888
print(x2_sub_copy)

print(x2)

"""**Reshaping of Arrays**"""

#putting numbers 1 through 9 in a 3 X 3 grid
grid=np.arange(1,10).reshape((3,3))
print(grid)

x=np.array([1,2,3])
x.reshape((1,3))

x[np.newaxis,:] #adding new dimension via newaxis

#adding new dimension via newaxis
x[:,np.newaxis]

"""**Array Concatenation and Splitting**"""

#np.concatenate, np.vstack, np.hstack

x=np.array([1,2,3])
y=np.array([3,2,1])
np.concatenate([x,y])

z=[99,99,99] #Concatenating more than two arrays
print(np.concatenate([x,y,z]))

grid=np.array([[1,2,3],[4,5,6]])
np.concatenate([grid,grid])

np.concatenate([grid,grid],axis=1)

grid=np.arange(9).reshape(3,3)
print(grid)
np.concatenate([grid,grid],axis=0)

x=np.array([1,2,3])
grid=np.array([[9,8,7],[6,5,4]])
np.vstack([x,grid]) #stacking the arrays vertically

y=np.array([[99],[99]])
np.hstack([grid,y])

"""**Splitting of arrays**"""

x=[4,5,6,88,88,6,5,4]
x1,x2,x3=np.split(x,[3,5])
print(x1,x2,x3)

grid=np.arange(16).reshape((4,4))
grid

upper, lower = np.vsplit(grid,[2])
print(upper)
print(lower)

left,right=np.hsplit(grid,[2])
print(left)
print(right)

with open("/content/TextFile",'a') as f:
  f.write("My First File\n")
  f.write("This is in file")

with open("/content/TextFile",'r+') as f:
  xx=f.read(); #f.read(10)
print(xx)

"""# Working with CSV"""

import csv
courses=[('OS',1,'Sep'),('DL',2,'Sep'),('Stat',3,'Sep')]
cf=open('student.csv','w',newline='') #Write Mode
obj=csv.writer(cf)
for course in courses:
  obj.writerow(course) #Writerow
cf.close()

courses=[('PY',4,'Sep'),('C',5,'Sep')]
cf=open('student.csv','a',newline='') #Append
obj=csv.writer(cf)
obj.writerows(courses) #Writerows
cf.close()

cf=open('student.csv','r',newline='') #read
obj=csv.reader(cf)
for row in obj:
  print(row)